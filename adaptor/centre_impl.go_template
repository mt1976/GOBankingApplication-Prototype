package adaptor

import (
	"strings"

	core "github.com/mt1976/mwt-go-dev/core"
	logs "github.com/mt1976/mwt-go-dev/logs"
    dm "github.com/mt1976/mwt-go-dev/datamodel"
)
// ----------------------------------------------------------------
// Automatically generated  "/adaptor/centre.go"
// ----------------------------------------------------------------
// Package              : adaptor
// Object 			    : Centre (centre)
// Endpoint 	        : Centre (Code)
// For Project          : github.com/mt1976/mwt-go-dev/
// ----------------------------------------------------------------
// Template Generator   : delinquentDysprosium [r4-21.12.31]
// Date & Time		    : 28/06/2022 at 16:10:44
// Who & Where		    : matttownsend (Matt Townsend) on silicon.local
// ----------------------------------------------------------------

// The following functions should be created in centre_impl.go



func Centre_NewID_impl(rec dm.Centre) (string) { return rec.Code }
func Centre_Delete_impl(id string) (error) {return nil}


func Centre_Update_impl(id string,rec dm.Centre, usr string) (error) {return nil}

	// If there are fields below, create the methods in adaptor\centre_impl.go
	// START - GET API/Callout
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//

	// 
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - GET API/Callout
	//
	// START - PUT API/Callout
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//

	// 
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - PUT API/Callout

	// START - Validation API/Callout
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//

	// 
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - Validation API/Callout

func Centre_ObjectValidation_impl (iAction string, iId string, iRec dm.Centre) (dm.Centre, error, string) {
	logs.Callout("Centre", "ObjectValidation", VAL +"-"+iAction, iId)
	switch iAction {
		case VAL:

		case NEW:

		case PUT:

		case GET:

		default:
			logs.Warning("Tmpl_TDate_impl" + " - Invalid Action")
		}
	return iRec,nil,""
	}
	