package adaptor

import (
	"strings"

	core "github.com/mt1976/mwt-go-dev/core"
	logs "github.com/mt1976/mwt-go-dev/logs"
    dm "github.com/mt1976/mwt-go-dev/datamodel"
)
// ----------------------------------------------------------------
// Automatically generated  "/adaptor/tmpl.go"
// ----------------------------------------------------------------
// Package              : adaptor
// Object 			    : Tmpl (tmpl)
// Endpoint 	        : Tmpl (TemplateID)
// For Project          : github.com/mt1976/mwt-go-dev/
// ----------------------------------------------------------------
// Template Generator   : delinquentDysprosium [r4-21.12.31]
// Date & Time		    : 26/06/2022 at 18:48:33
// Who & Where		    : matttownsend (Matt Townsend) on silicon.local
// ----------------------------------------------------------------

// The following functions should be created in tmpl_impl.go




	// If there are fields below, create the methods in adaptor\tmpl_impl.go
	// START - GET API/Callout
	// Dynamically generated 26/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//
func Tmpl_ID_OnStore_impl (fieldval string,rec dm.Tmpl,usr string) (string,error)  {
	logs.Callout("Tmpl", "ID", PUT, rec.ID)
	return fieldval,nil
	}
func Tmpl_ExtraField_OnStore_impl (fieldval string,rec dm.Tmpl,usr string) (string,error)  {
	logs.Callout("Tmpl", "ExtraField", PUT, rec.ID)
	return fieldval,nil
	}
func Tmpl_ExtraField3_OnStore_impl (fieldval string,rec dm.Tmpl,usr string) (string,error)  {
	logs.Callout("Tmpl", "ExtraField3", PUT, rec.ID)
	return fieldval,nil
	}
func Tmpl_TDate_OnStore_impl (fieldval string,rec dm.Tmpl,usr string) (string,error)  {
	logs.Callout("Tmpl", "TDate", PUT, rec.ID)
	return fieldval,nil
	}

	// 
	// Dynamically generated 26/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - GET API/Callout
	//
	// START - PUT API/Callout
	// Dynamically generated 26/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//
func Tmpl_ID_OnFetch_impl (rec dm.Tmpl)(string) {
	logs.Callout("Tmpl", "ID", GET, rec.ID)
	return ""
	}
func Tmpl_ExtraField_OnFetch_impl (rec dm.Tmpl)(string) {
	logs.Callout("Tmpl", "ExtraField", GET, rec.ID)
	return ""
	}
func Tmpl_ExtraField3_OnFetch_impl (rec dm.Tmpl)(string) {
	logs.Callout("Tmpl", "ExtraField3", GET, rec.ID)
	return ""
	}
func Tmpl_TDate_OnFetch_impl (rec dm.Tmpl)(string) {
	logs.Callout("Tmpl", "TDate", GET, rec.ID)
	return ""
	}

	// 
	// Dynamically generated 26/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - PUT API/Callout

	// START - Validation API/Callout
	// Dynamically generated 26/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//
	// Tmpl_ID_Impl provides validation/actions for ID
	func Tmpl_ID_Impl (iAction string, iId string, iValue string, iRec dm.Tmpl, fP dm.FieldProperties) (string, dm.FieldProperties) {
	logs.Callout("Tmpl", "ID", VAL +"-"+iAction, iId)
	return "",fP
	}
	// Tmpl_ExtraField_Impl provides validation/actions for ExtraField
	func Tmpl_ExtraField_Impl (iAction string, iId string, iValue string, iRec dm.Tmpl, fP dm.FieldProperties) (string, dm.FieldProperties) {
	logs.Callout("Tmpl", "ExtraField", VAL +"-"+iAction, iId)
	return "",fP
	}
	// Tmpl_ExtraField3_Impl provides validation/actions for ExtraField3
	func Tmpl_ExtraField3_Impl (iAction string, iId string, iValue string, iRec dm.Tmpl, fP dm.FieldProperties) (string, dm.FieldProperties) {
	logs.Callout("Tmpl", "ExtraField3", VAL +"-"+iAction, iId)
	return "",fP
	}
	// Tmpl_TDate_Impl provides validation/actions for TDate
	func Tmpl_TDate_Impl (iAction string, iId string, iValue string, iRec dm.Tmpl, fP dm.FieldProperties) (string, dm.FieldProperties) {
	logs.Callout("Tmpl", "TDate", VAL +"-"+iAction, iId)
	return "",fP
	}

	// 
	// Dynamically generated 26/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - Validation API/Callout