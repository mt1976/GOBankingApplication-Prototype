package adaptor

import (
	"strings"

	core "github.com/mt1976/mwt-go-dev/core"
	logs "github.com/mt1976/mwt-go-dev/logs"
    dm "github.com/mt1976/mwt-go-dev/datamodel"
)
// ----------------------------------------------------------------
// Automatically generated  "/adaptor/currencypair.go"
// ----------------------------------------------------------------
// Package              : adaptor
// Object 			    : CurrencyPair (currencypair)
// Endpoint 	        : CurrencyPair (Code)
// For Project          : github.com/mt1976/mwt-go-dev/
// ----------------------------------------------------------------
// Template Generator   : delinquentDysprosium [r4-21.12.31]
// Date & Time		    : 28/06/2022 at 16:10:49
// Who & Where		    : matttownsend (Matt Townsend) on silicon.local
// ----------------------------------------------------------------

// The following functions should be created in currencypair_impl.go



func CurrencyPair_NewID_impl(rec dm.CurrencyPair) (string) { return rec.Code }
func CurrencyPair_Delete_impl(id string) (error) {return nil}


func CurrencyPair_Update_impl(id string,rec dm.CurrencyPair, usr string) (error) {return nil}

	// If there are fields below, create the methods in adaptor\currencypair_impl.go
	// START - GET API/Callout
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//
func CurrencyPair_Code_OnStore_impl (fieldval string,rec dm.CurrencyPair,usr string) (string,error)  {
	logs.Callout("CurrencyPair", "Code", PUT, rec.Code)
	return fieldval,nil
	}

	// 
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - GET API/Callout
	//
	// START - PUT API/Callout
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//
func CurrencyPair_Code_OnFetch_impl (rec dm.CurrencyPair)(string) {
	logs.Callout("CurrencyPair", "Code", GET, rec.Code)
	return rec.Code
	}

	// 
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - PUT API/Callout

	// START - Validation API/Callout
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	//
	// CurrencyPair_Code_impl provides validation/actions for Code
	func CurrencyPair_Code_impl (iAction string, iId string, iValue string, iRec dm.CurrencyPair, fP dm.FieldProperties) (string, dm.FieldProperties) {
	logs.Callout("CurrencyPair", "Code", VAL +"-"+iAction, iId)
	return iValue,fP
	}

	// 
	// Dynamically generated 28/06/2022 by matttownsend (Matt Townsend) on silicon.local 
	// END - Validation API/Callout

func CurrencyPair_ObjectValidation_impl (iAction string, iId string, iRec dm.CurrencyPair) (dm.CurrencyPair, error, string) {
	logs.Callout("CurrencyPair", "ObjectValidation", VAL +"-"+iAction, iId)
	switch iAction {
		case VAL:

		case NEW:

		case PUT:

		case GET:

		default:
			logs.Warning("Tmpl_TDate_impl" + " - Invalid Action")
		}
	return iRec,nil,""
	}
	